/*
 * This file is generated by jOOQ.
 */
package com.redstorm.rhine.jooq.tables.records;


import com.redstorm.rhine.jooq.tables.Tasks;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TasksRecord extends UpdatableRecordImpl<TasksRecord> implements Record6<Long, String, String, Long, Boolean, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.tasks.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.tasks.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.tasks.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.tasks.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.tasks.description</code>.
     */
    public void setDescription(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.tasks.description</code>.
     */
    public String getDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.tasks.schedule</code>.
     */
    public void setSchedule(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.tasks.schedule</code>.
     */
    public Long getSchedule() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>public.tasks.completed</code>.
     */
    public void setCompleted(Boolean value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.tasks.completed</code>.
     */
    public Boolean getCompleted() {
        return (Boolean) get(4);
    }

    /**
     * Setter for <code>public.tasks.list_id</code>.
     */
    public void setListId(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.tasks.list_id</code>.
     */
    public Long getListId() {
        return (Long) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, String, String, Long, Boolean, Long> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Long, String, String, Long, Boolean, Long> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Tasks.TASKS.ID;
    }

    @Override
    public Field<String> field2() {
        return Tasks.TASKS.NAME;
    }

    @Override
    public Field<String> field3() {
        return Tasks.TASKS.DESCRIPTION;
    }

    @Override
    public Field<Long> field4() {
        return Tasks.TASKS.SCHEDULE;
    }

    @Override
    public Field<Boolean> field5() {
        return Tasks.TASKS.COMPLETED;
    }

    @Override
    public Field<Long> field6() {
        return Tasks.TASKS.LIST_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getDescription();
    }

    @Override
    public Long component4() {
        return getSchedule();
    }

    @Override
    public Boolean component5() {
        return getCompleted();
    }

    @Override
    public Long component6() {
        return getListId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getDescription();
    }

    @Override
    public Long value4() {
        return getSchedule();
    }

    @Override
    public Boolean value5() {
        return getCompleted();
    }

    @Override
    public Long value6() {
        return getListId();
    }

    @Override
    public TasksRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public TasksRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public TasksRecord value3(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public TasksRecord value4(Long value) {
        setSchedule(value);
        return this;
    }

    @Override
    public TasksRecord value5(Boolean value) {
        setCompleted(value);
        return this;
    }

    @Override
    public TasksRecord value6(Long value) {
        setListId(value);
        return this;
    }

    @Override
    public TasksRecord values(Long value1, String value2, String value3, Long value4, Boolean value5, Long value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TasksRecord
     */
    public TasksRecord() {
        super(Tasks.TASKS);
    }

    /**
     * Create a detached, initialised TasksRecord
     */
    public TasksRecord(Long id, String name, String description, Long schedule, Boolean completed, Long listId) {
        super(Tasks.TASKS);

        setId(id);
        setName(name);
        setDescription(description);
        setSchedule(schedule);
        setCompleted(completed);
        setListId(listId);
        resetChangedOnNotNull();
    }
}
